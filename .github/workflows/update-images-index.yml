name: Update images/index.json

on:
  push:
    paths:
      - "images/**"
  workflow_dispatch: {}
  schedule:
    - cron: "17 7 * * *"  # optional: safety refresh daily at 07:17 UTC

permissions:
  contents: write

jobs:
  build-manifest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Generate images/index.json
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const path = require('path');

          const imagesDir = path.join(process.cwd(), 'images');
          if (!fs.existsSync(imagesDir)) {
            console.error('No /images folder found at repo root.');
            process.exit(1);
          }

          const exts = new Set(['.png','.jpg','.jpeg','.webp','.gif','.bmp','.svg','.avif']);
          const outPath = path.join(imagesDir, 'index.json');

          function walk(dir, relBase='') {
            const entries = fs.readdirSync(dir, { withFileTypes: true });
            let files = [];
            for (const e of entries) {
              if (e.name.startsWith('.')) continue; // skip dotfiles
              const abs = path.join(dir, e.name);
              const rel = path.posix.join(relBase, e.name);
              if (e.isDirectory()) {
                files = files.concat(walk(abs, rel));
              } else {
                const ext = path.extname(e.name).toLowerCase();
                if (exts.has(ext) && e.name !== 'index.json') files.push(rel);
              }
            }
            return files;
          }

          let files = walk(imagesDir);

          // stable order: case-insensitive, folders first implicitly by path
          files.sort((a,b) => a.localeCompare(b, undefined, { sensitivity:'base' }));

          // keep it super simple: array of strings (your page already supports this)
          const json = JSON.stringify(files, null, 2) + '\n';

          // write only if changed
          let changed = true;
          try {
            const prev = fs.readFileSync(outPath, 'utf8');
            changed = prev !== json;
          } catch (_) {}

          if (changed) {
            fs.writeFileSync(outPath, json, 'utf8');
            console.log(`Wrote ${outPath} with ${files.length} item(s).`);
          } else {
            console.log('No changes to images/index.json');
          }
          NODE

      - name: Commit and push (if changed)
        run: |
          if git diff --quiet -- images/index.json; then
            echo "No manifest changes. Skipping commit."
          else
            git config user.name "${GITHUB_ACTOR}"
            git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
            git add images/index.json
            git commit -m "chore: update images/index.json [skip ci]"
            git push
          fi
