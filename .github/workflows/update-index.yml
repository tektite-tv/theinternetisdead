name: Update posts index

on:
  push:
    paths:
      - 'posts/**/*.md'
      - '.github/workflows/update-index.yml'
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # optional: refresh every 6h

permissions:
  contents: write

concurrency:
  group: update-posts-index
  cancel-in-progress: true

jobs:
  build-index:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo (full history for git log)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate posts/index.json
        run: |
          set -euo pipefail
          mkdir -p posts
          files="$(git ls-files 'posts/*.md' || true)"

          if [ -z "$files" ]; then
            echo "[]" > posts/index.json
          else
            echo "$files" | while read -r f; do
              [ -z "$f" ] && continue
              # Prefer Git history timestamp for “last updated”
              d="$(git log -1 --format=%cI -- "$f" || true)"

              # Fallback to filesystem mtime if git log fails (shouldn’t, but the universe is chaos)
              if [ -z "$d" ]; then
                if stat --version >/dev/null 2>&1; then
                  d="$(date -Iseconds -u -d "@$(stat -c %Y "$f")")"
                else
                  d="$(date -Iseconds -u -r "$(stat -f %m "$f")")"
                fi
              fi

              bn="$(basename "$f")"
              printf '{ "file": "%s", "updated": "%s" }\n' "$bn" "$d"
            done | jq -s 'sort_by(.updated) | reverse' > posts/index.json
          fi

          echo "Generated posts/index.json:"
          cat posts/index.json

      - name: Commit and push if changed
        run: |
          set -e
          if git diff --quiet posts/index.json; then
            echo "No changes to commit."
            exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add posts/index.json
          git commit -m "chore: rebuild posts/index.json [skip ci]"
          git push
